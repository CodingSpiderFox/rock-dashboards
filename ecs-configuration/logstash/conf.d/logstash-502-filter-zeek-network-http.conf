## HTTP ##################################################################
filter {
  if [@metadata][stage] == "zeek_network" and [event][dataset] == "http" {
    if [http] {

      mutate {
        rename => {
          "[http][host]" => "[url][domain]"
          "[http][method]" => "[http][request][method]"
          "[http][orig_filenames]" => "[client][file][name]"
          "[http][origin]" => "[http][request][origin]"
          "[http][password]" => "[url][password]"
          "[http][referrer]" => "[http][request][referrer]"
          "[http][request_body_len]" => "[http][request][body][bytes]"
          "[http][resp_filenames]" => "[server][file][name]"
          "[http][response_body_len]" => "[http][response][body][bytes]"
          "[http][status_code]" => "[http][response][status_code]"
          "[http][uri]" => "[url][original]"
          "[http][user_agent]" => "[user_agent][original]"
          "[http][username]" => "[url][username]"
          "[http][status_message]" => "[http][response][status_message]"
          "[http][version]" => "[http][request][version]"
        }
        copy => { "[url][domain]" => "[@metadata][destination_domain]" }
      }

      # Copy FUIDs if it exists, rare that both exist but it happens
      if [log][id][orig_fuids] {
        mutate { merge => { "[related][id]" => "[log][id][orig_fuids]" } }
      }
      if [log][id][resp_fuids] {
        mutate { merge => { "[related][id]" => "[log][id][resp_fuids]" } }
      }

      # Copy filename if it exists, rare that both exist but it happens
      if [client][file][name] {
        mutate { merge => { "[file][name]" => "[client][file][name]" } }
      }
      if [server][file][name] {
        mutate { merge => { "[file][name]" => "[server][file][name]" } }
      }

      if [url][domain] {
        # Parse domain names & IPs from host header
        ruby {
          path => "/etc/logstash/conf.d/ruby/logstash-ruby-filter-http-host-related.rb"
          script_params => {
            "source_field" => "[url][domain]"
          }
          tag_on_exception => "_rubyexception-zeek-parse_domains_and_ips_from_http_host"
        }
      }

    }
  }
}