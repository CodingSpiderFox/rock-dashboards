## DNS ###################################################################
filter {
  if [@metadata][stage] == "zeek_network" and [event][dataset] == "dns" {
    if [dns] {

      mutate {
        rename => {
          "[dns][answers]" => "[dns][answers][name]"
          "[dns][query]" => "[dns][question][name]"
          "[dns][TTLs]" => "[dns][answers][ttl]"
          "[dns][qclass_name]" => "[dns][question][class]"
          "[dns][qtype_name]" => "[dns][question][type]"
          "[dns][rcode_name]" => "[dns][response_code]"
          "[dns][trans_id]" => "[dns][id]"
          "[dns][rtt]" => "[event][duration]"
        }
        copy => { "[dns][question][name]" => "[@metadata][destination_domain]" }
        merge => { "[related][domain]" => "[dns][question][name]" }
      }

      # responding dns server is authoritative for this answer/response
      if [dns][AA] == 'true' {
        mutate { add_field => { "[dns][header_flags]" => "AA" }
      }

      # responding dns server supports recursion. A DNS flag specifying whether recursive query support is available in the name server.
      if [dns][RA] == 'true' {
        mutate { add_field => { "[dns][header_flags]" => "RA" }
      }

      # recursion was requested by the client
      if [dns][RD] == 'true' {
        mutate { add_field => { "[dns][header_flags]" => "RD" }
      }

      # responding answer/response was truncated
      if [dns][TC] == 'true' {
        mutate { add_field => { "[dns][header_flags]" => "TC" }
      }

      # Event outcome
      if [dns][rejected] {
        translate {
          field => "[dns][rejected]"
          exact => true
          dictionary => [
            "false", "success",
            "true", "failure"
          ]
          destination => "[event][outcome]"
        }
      }

    }
  }
}