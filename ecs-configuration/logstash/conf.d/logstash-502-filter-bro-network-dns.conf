## DNS ###################################################################
if [event][dataset] == "dns" {
  # if [dns][qtype] == 1 (A) or 28 (AAAA), split out answers to hostnames & ips
  # Nest the entire document
  if [dns] {
    ruby {
      path => "/etc/logstash/ruby/logstash-ruby-filter-dns-related.rb"
      script_params => {
        "query_field" => "[dns][query]"
        "query_type_field" => "[dns][qtype_name]"
        "answers_field" => "[dns][answers]"
      }
    }

    # Rename fields to ECS names
    mutate { rename => { "[dns][AA]" => "[dns][authoritative_answer]"}}
    mutate { rename => { "[dns][TC]" => "[dns][truncated]"}}
    mutate { rename => { "[dns][RD]" => "[dns][recursion_desired]"}}
    mutate { rename => { "[dns][RA]" => "[dns][recursion_available]"}}
    mutate { rename => { "[dns][qclass_name]" => "[dns][query_class][name]"}}
    mutate { rename => { "[dns][qclass]" => "[dns][query_class][code]"}}
    mutate { rename => { "[dns][qtype_name]" => "[dns][query_type][name]"}}
    mutate { rename => { "[dns][qtype]" => "[dns][query_type][code]"}}
    mutate { rename => { "[dns][rcode_name]" => "[dns][response_code][name]"}}
    mutate { rename => { "[dns][rcode]" => "[dns][response_code][code]"}}
    mutate { rename => { "[dns][trans_id]" => "[dns][transaction_id]"}}
    mutate { rename => { "[dns][proto]" => "[network][transport]"}}
    mutate { rename => { "[dns][rtt]" => "[dns][round_trip_time]"}}
    mutate { rename => { "[dns][addl]" => "[dns][additional_responses]"}}
    mutate { rename => { "[dns][auth]" => "[dns][authoritative_responses]"}}

    # Unchanged Bro Fields
      # dns.Z
      # dns.TTLs
      # dns.rejected
  }
}
