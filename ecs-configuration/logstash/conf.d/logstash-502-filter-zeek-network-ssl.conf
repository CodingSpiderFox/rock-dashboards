## SSL ###################################################################
filter {
  if [@metadata][stage] == "zeek_network" and [event][dataset] == "ssl" {

    if [ssl] {

      mutate {
        rename => {
          "[ssl][cipher]" => "[tls][cipher]"
          "[ssl][client_issuer]" => "[tls][client][issuer]"
          "[ssl][client_subject]" => "[tls][client][subject]"
          "[ssl][curve]" => "[tls][curve]"
          "[ssl][established]" => "[tls][established]"
          "[ssl][issuer]" => "[tls][server][issuer]"
          "[ssl][ja3]" => "[tls][client][ja3]"
          "[ssl][ja3s]" => "[tls][server][ja3s]"
          "[ssl][next_protocol]" => "[tls][next_protocol]"
          "[ssl][orig_certificate_sha1]" => "[tls][client][hash][sha1]"
          "[ssl][resp_certificate_sha1]" => "[tls][server][hash][sha1]"
          "[ssl][resumed]" => "[tls][resumed]"
          "[ssl][server_name]" => "[tls][client][server_name]"
          "[ssl][subject]" => "[tls][server][subject]"
          "[ssl][version]" => "[tls][version]"
        }
        copy => {
          "[tls][client][server_name]" => "[@metadata][destination_domain]"
          "[tls][version]" => "[tls][version_protocol]"
        }
        merge => { "[related][id]" => "[log][id][cert_chain_fuids]" }
      }
      mutate {
        lowercase => [ "[tls][version_protocol]" ]
        merge => { "[related][id]" => "[log][id][client_cert_chain_fuids]" }
      }

      # Event outcome
      if [ssl][established] {
        translate {
          field => "[tls][established]"
          exact => true
          dictionary => [
            "true", "success",
            "false", "failure"
          ]
          destination => "[event][outcome]"
        }
      }

    }
  }
}