## HTTP ##################################################################
if [event][dataset] == "http" {
  if [http] {
    # Parse domain names & IPs from host header
    ruby {
      path => "/etc/logstash/ruby/logstash-ruby-filter-http-host-related.rb"
      script_params => {
        "source_field" => "[http][host]"
      }
    }
    # add related file ids
    mutate { merge => { "[related][id]" => "[http][orig_fuids]" }}
    mutate { merge => { "[related][id]" => "[http][resp_fuids]" }}

    # These are ECS fields that do not map to Bro
    # http.request.body.content
    # http.response.body.content
    # http.request.bytes
    # http.request.body.bytes
    # http.response.bytes

    # Match ECS fields
    mutate { rename => { "[http][referrer]" => "[http][request][referrer]"}}
    mutate { rename => { "[http][method]" => "[http][request][method]"}}
    mutate { rename => { "[http][response_body_len]" => "[http][response][body_length]"}}
    mutate { rename => { "[http][status_code]" => "[http][response][status_code]"}}
    mutate { rename => { "[http][status_message]" => "[http][response][status_message]"}}
    mutate { rename => { "[http][request_body_len]" => "[http][request][body_length]"}}
    mutate { rename => { "[http][host]" => "[http][request][host]"}}
    mutate { rename => { "[http][proxied]" => "[http][request][proxied]"}}
    mutate { rename => { "[http][uri]" => "[http][response][uri]"}}
    mutate { rename => { "[http][version]" => "[http][request][version]"}}

    # Data where bro and ECS don't match well
    mutate { rename => { "[http][info_code]" => "[http][info][code]" }}
    mutate { rename => { "[http][info_msg]" => "[http][info][message]" }}
    mutate { rename => { "[http][orig_fuids]" => "[http][client][file_id]"}}
    mutate { rename => { "[http][orig_mime_types]" => "[http][client][mime_types]"}}
    mutate { rename => { "[http][orig_filenames]" => "[http][client][filenames]"}}
    mutate { rename => { "[http][resp_fuids]" => "[http][server][file_id]"}}
    mutate { rename => { "[http][resp_mime_types]" => "[http][server][mime_types]"}}
    mutate { rename => { "[http][resp_filenames]" => "[http][server][filenames]"}}
    mutate { rename => { "[http][trans_depth]" => "[http][transaction_depth]"}}

    # Copy filename if it exists
    if [http][server][filenames] {
      mutate { copy => { "[http][server][filenames]" => "[file][name]"}}
    }
    elif [http][client][filenames] {
      mutate { copy => { "[http][client][filenames]" => "[file][name]"}}
    }

    # This is debatable, but Bro won't detect HTTP over UDP or SCTP
    mutate { add_field => { "[network][protocol]" => "tcp"}}

    useragent {
      source => "[http][user_agent]"
      target => "user_agent"
    }

    mutate { rename => { "[http][user_agent]" => "[user_agent][original]"}}

  }
}
